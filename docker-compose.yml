services:
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/app/src
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

    environment:
      - PLACEHOLDER=placeholder
    restart: always
    command:  npm run start
    ports:
      - "3001:3000"
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    links:
      - db
    volumes:
      - ./backend/src:/app/src
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PORT=3001
    restart: always
    command:  npm run dev
  proxy:
    image: nginx
    volumes:
      - ./proxy/redirect_to_ssl.template:/etc/nginx/conf.d/redirect_to_ssl.template
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8080:80"
    links:
      - frontend
      - backend
    environment:
      - DOLLAR=$$
      - NGINX_HOST=localhost
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/redirect_to_ssl.template > /etc/nginx/conf.d/default.conf && cat  /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
  db:
    image: postgis/postgis
    volumes_from:
      - data
      - backup
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  data:
    image: busybox
    volumes:
      - /var/lib/postgresql/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  backup:
    image: busybox
    volumes:
      - ~/backup:/backup
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
